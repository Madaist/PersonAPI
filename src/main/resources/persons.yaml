openapi: "3.0.2"
info:
  description: "Persons server"
  version: "1.0.0"
  title: "Person API"

paths:
  '/persons':
    get:
      tags:
        - "person"
      summary: Return a list of all persons
      description: "Returns a list of persons"
      operationId: "getAllPersons"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonList"
        404:
          description: "Persons not found"
    post:
      tags:
        - "person"
      summary: "Insert a new person"
      description: "Insert a new person in the csv file"
      operationId: "insertPerson"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
      responses:
        405:
          description: "Invalid input"
  /persons/{id}:
    get:
      tags:
        - "person"
      summary: Find person by id
      description: "Returns a single person"
      operationId: "getPersonById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of person to return"
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        404:
          description: "Person not found"
    delete:
      tags:
        - "person"
      summary: "Delete a person by id"
      description: "Delete a person from the csv file"
      operationId: "deletePerson"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of person to be deleted"
          required: true
          schema:
            type: integer
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Person not found"
    put:
      tags:
        - "person"
      summary: "Update a person"
      description: "Update a person in the csv file by id"
      operationId: "updatePerson"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of person to be updated"
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
      responses:
        400:
          description: "Invalid person supplied"
        404:
          description: "Person not found"
components:
  schemas:
    PersonList:
      type: array
      items:
        $ref: "#/components/schemas/Person"
    Person:
      type: object
      properties:
        lastName:
          type: string
          example: "Istrate"
        firstName:
          type: string
          example: "Madalina"
        age:
          type: integer
          example: 20
        socialSecurityCode:
          type: string
          example: "123456789"

